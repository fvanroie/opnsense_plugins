{
    "openapi": "3.0.1",
    "info": {
        "version": "0.0.1",
        "title": "OPNsense REST api OAS schema",
        "description": "A sample API that proposese a refresh of the OPNsense REST API based on the OpenAPI 3.0 specification.\nNote: The endpoints are NOT a description of the current OPNsense API.",
        "termsOfService": "https://opnsense.org/about/legal-notices/",
        "contact": {
            "name": "OPNsense Community",
            "url": "https://opnsense.org"
        },
        "license": {
            "name": "Simplified BSD License",
            "url": "https://opensource.org/licenses/bsd-license.php"
        }
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/core/firmware/{action}/{package}": {
            "post": {
                "operationId": "doFirmwarePackage",
                "summary": "Performs an action on an OPNsense package",
                "tags": [
                    "Firmware"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/packageaction"
                    },
                    {
                        "$ref": "#/components/parameters/packagename"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/accounts/get/{uuid}": {
            "get": {
                "operationId": "getAcmeClientAccount",
                "summary": "Returns a Account",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Account": {
                                            "$ref": "#/components/schemas/OPNsense.AcmeClient.accounts.account"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/accounts/set/{uuid}": {
            "post": {
                "operationId": "setAcmeClientAccount",
                "summary": "Updates a Account",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.AcmeClient.accounts.account"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/accounts/del/{uuid}": {
            "post": {
                "operationId": "deleteAcmeClientAccount",
                "summary": "Removes a Account",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/accounts/toggle/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleAcmeClientAccount",
                "summary": "Toggle a Account",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/acmeclient/accounts/add": {
            "description": "Account",
            "summary": "Create AcmeClient Account items",
            "post": {
                "operationId": "addAcmeClientAccount",
                "summary": "Add a new Account",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.AcmeClient.accounts.account"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/acmeclient/accounts/search": {
            "post": {
                "operationId": "searchAcmeClientAccount",
                "summary": "Search a Account",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/actions/get/{uuid}": {
            "get": {
                "operationId": "getAcmeClientAction",
                "summary": "Returns a Action",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Action": {
                                            "$ref": "#/components/schemas/OPNsense.AcmeClient.actions.action"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/actions/set/{uuid}": {
            "post": {
                "operationId": "setAcmeClientAction",
                "summary": "Updates a Action",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.AcmeClient.actions.action"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/actions/del/{uuid}": {
            "post": {
                "operationId": "deleteAcmeClientAction",
                "summary": "Removes a Action",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/actions/toggle/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleAcmeClientAction",
                "summary": "Toggle a Action",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/acmeclient/actions/add": {
            "description": "Action",
            "summary": "Create AcmeClient Action items",
            "post": {
                "operationId": "addAcmeClientAction",
                "summary": "Add a new Action",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.AcmeClient.actions.action"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/acmeclient/actions/search": {
            "post": {
                "operationId": "searchAcmeClientAction",
                "summary": "Search a Action",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/certificates/get/{uuid}": {
            "get": {
                "operationId": "getAcmeClientCertificate",
                "summary": "Returns a Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Certificate": {
                                            "$ref": "#/components/schemas/OPNsense.AcmeClient.certificates.certificate"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/certificates/set/{uuid}": {
            "post": {
                "operationId": "setAcmeClientCertificate",
                "summary": "Updates a Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.AcmeClient.certificates.certificate"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/certificates/del/{uuid}": {
            "post": {
                "operationId": "deleteAcmeClientCertificate",
                "summary": "Removes a Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/certificates/toggle/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleAcmeClientCertificate",
                "summary": "Toggle a Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/acmeclient/certificates/add": {
            "description": "Certificate",
            "summary": "Create AcmeClient Certificate items",
            "post": {
                "operationId": "addAcmeClientCertificate",
                "summary": "Add a new Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.AcmeClient.certificates.certificate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/acmeclient/certificates/search": {
            "post": {
                "operationId": "searchAcmeClientCertificate",
                "summary": "Search a Certificate",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/validations/get/{uuid}": {
            "get": {
                "operationId": "getAcmeClientValidation",
                "summary": "Returns a Validation",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Validation": {
                                            "$ref": "#/components/schemas/OPNsense.AcmeClient.validations.validation"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/acmeclient/validations/set/{uuid}": {
            "post": {
                "operationId": "setAcmeClientValidation",
                "summary": "Updates a Validation",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.AcmeClient.validations.validation"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/validations/del/{uuid}": {
            "post": {
                "operationId": "deleteAcmeClientValidation",
                "summary": "Removes a Validation",
                "tags": [
                    "AcmeClient"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/acmeclient/validations/toggle/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleAcmeClientValidation",
                "summary": "Toggle a Validation",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/acmeclient/validations/add": {
            "description": "Validation",
            "summary": "Create AcmeClient Validation items",
            "post": {
                "operationId": "addAcmeClientValidation",
                "summary": "Add a new Validation",
                "tags": [
                    "AcmeClient"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.AcmeClient.validations.validation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/acmeclient/validations/search": {
            "post": {
                "operationId": "searchAcmeClientValidation",
                "summary": "Search a Validation",
                "tags": [
                    "AcmeClient"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/captiveportal/service/searchtemplates/{uuid}": {
            "get": {
                "operationId": "getCaptivePortalTemplate",
                "summary": "Returns a Template",
                "tags": [
                    "CaptivePortal"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Template": {
                                            "$ref": "#/components/schemas/OPNsense.captiveportal.templates.template"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/captiveportal/service/settemplate/{uuid}": {
            "post": {
                "operationId": "setCaptivePortalTemplate",
                "summary": "Updates a Template",
                "tags": [
                    "CaptivePortal"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.captiveportal.templates.template"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/captiveportal/service/deltemplate/{uuid}": {
            "post": {
                "operationId": "deleteCaptivePortalTemplate",
                "summary": "Removes a Template",
                "tags": [
                    "CaptivePortal"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/captiveportal/service/addtemplate": {
            "description": "Template",
            "summary": "Create CaptivePortal Template items",
            "post": {
                "operationId": "addCaptivePortalTemplate",
                "summary": "Add a new Template",
                "tags": [
                    "CaptivePortal"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.captiveportal.templates.template"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/captiveportal/service/searchtemplates": {
            "post": {
                "operationId": "searchCaptivePortalTemplate",
                "summary": "Search a Template",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/captiveportal/settings/getzone/{uuid}": {
            "get": {
                "operationId": "getCaptivePortalZone",
                "summary": "Returns a Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Zone": {
                                            "$ref": "#/components/schemas/OPNsense.captiveportal.zones.zone"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/captiveportal/settings/setzone/{uuid}": {
            "post": {
                "operationId": "setCaptivePortalZone",
                "summary": "Updates a Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.captiveportal.zones.zone"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/captiveportal/settings/delzone/{uuid}": {
            "post": {
                "operationId": "deleteCaptivePortalZone",
                "summary": "Removes a Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/captiveportal/settings/togglezone/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleCaptivePortalZone",
                "summary": "Toggle a Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/captiveportal/settings/addzone": {
            "description": "Zone",
            "summary": "Create CaptivePortal Zone items",
            "post": {
                "operationId": "addCaptivePortalZone",
                "summary": "Add a new Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.captiveportal.zones.zone"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/captiveportal/settings/searchzones": {
            "post": {
                "operationId": "searchCaptivePortalZone",
                "summary": "Search a Zone",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/captiveportal/vouchers/listProviders": {
            "get": {
                "operationId": "listCaptivePortalProvider",
                "summary": "Return voucher providers",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/captiveportal/vouchers/listVoucherGroups/{provider}": {
            "get": {
                "operationId": "listCaptivePortalVoucherGroup",
                "summary": "Return voucher groups for a provider",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    }
                ]
            }
        },
        "/captiveportal/vouchers/dropVoucherGroup/{provider}/{group}": {
            "get": {
                "operationId": "deleteCaptivePortalVoucherGroup",
                "summary": "Delete voucher group and its vouchers.",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    },
                    {
                        "$ref": "#/components/parameters/vouchergroup"
                    }
                ]
            }
        },
        "/captiveportal/vouchers/dropExpiredVouchers/{provider}/{group}": {
            "get": {
                "operationId": "deleteCaptivePortalExpiredVoucher",
                "summary": "Delete expired vouchers from a group.",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    },
                    {
                        "$ref": "#/components/parameters/vouchergroup"
                    }
                ]
            }
        },
        "/captiveportal/vouchers/listVouchers/{provider}/{group}": {
            "get": {
                "operationId": "listCaptivePortalVoucher",
                "summary": "Return voucher groups for a provider",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    },
                    {
                        "$ref": "#/components/parameters/vouchergroup"
                    }
                ]
            }
        },
        "/captiveportal/vouchers/expireVoucher/{provider}": {
            "post": {
                "operationId": "expireCaptivePortalVoucher",
                "summary": "Expires a voucher and prevents it from being used.",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    }
                ]
            }
        },
        "/captiveportal/vouchers/generateVouchers/{provider}": {
            "post": {
                "operationId": "addCaptivePortalVoucher",
                "summary": "Creates vouchers within a group of a provider.",
                "tags": [
                    "CaptivePortal"
                ],
                "responses": {
                    "200": {
                        "description": "Check the status field in the reponse.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "The response status of the operation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/voucherprovider"
                    }
                ]
            }
        },
        "/cron/settings/getjob/{uuid}": {
            "get": {
                "operationId": "getCronJob",
                "summary": "Returns a Job",
                "tags": [
                    "Cron"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Job": {
                                            "$ref": "#/components/schemas/OPNsense.cron.jobs.job"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cron/settings/setjob/{uuid}": {
            "post": {
                "operationId": "setCronJob",
                "summary": "Updates a Job",
                "tags": [
                    "Cron"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.cron.jobs.job"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/cron/settings/deljob/{uuid}": {
            "post": {
                "operationId": "deleteCronJob",
                "summary": "Removes a Job",
                "tags": [
                    "Cron"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/cron/settings/togglejob/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleCronJob",
                "summary": "Toggle a Job",
                "tags": [
                    "Cron"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/cron/settings/addjob": {
            "description": "Job",
            "summary": "Create Cron Job items",
            "post": {
                "operationId": "addCronJob",
                "summary": "Add a new Job",
                "tags": [
                    "Cron"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.cron.jobs.job"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/cron/settings/searchjobs": {
            "post": {
                "operationId": "searchCronJob",
                "summary": "Search a Job",
                "tags": [
                    "Cron"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/freeradius/client/getclient/{uuid}": {
            "get": {
                "operationId": "getFreeRadiusClient",
                "summary": "Returns a Client",
                "tags": [
                    "FreeRadius"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Client": {
                                            "$ref": "#/components/schemas/OPNsense.freeradius.client.clients.client"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/freeradius/client/setclient/{uuid}": {
            "post": {
                "operationId": "setFreeRadiusClient",
                "summary": "Updates a Client",
                "tags": [
                    "FreeRadius"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.freeradius.client.clients.client"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/freeradius/client/delclient/{uuid}": {
            "post": {
                "operationId": "deleteFreeRadiusClient",
                "summary": "Removes a Client",
                "tags": [
                    "FreeRadius"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/freeradius/client/toggleclient/{uuid}": {
            "post": {
                "operationId": "toggleFreeRadiusClient",
                "summary": "Toggle a Client",
                "tags": [
                    "FreeRadius"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/freeradius/client/addclient": {
            "description": "Client",
            "summary": "Create FreeRadius Client items",
            "post": {
                "operationId": "addFreeRadiusClient",
                "summary": "Add a new Client",
                "tags": [
                    "FreeRadius"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.freeradius.client.clients.client"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/freeradius/client/searchclient": {
            "post": {
                "operationId": "searchFreeRadiusClient",
                "summary": "Search a Client",
                "tags": [
                    "FreeRadius"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/freeradius/user/getuser/{uuid}": {
            "get": {
                "operationId": "getFreeRadiusUser",
                "summary": "Returns a User",
                "tags": [
                    "FreeRadius"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "User": {
                                            "$ref": "#/components/schemas/OPNsense.freeradius.user.users.user"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/freeradius/user/setuser/{uuid}": {
            "post": {
                "operationId": "setFreeRadiusUser",
                "summary": "Updates a User",
                "tags": [
                    "FreeRadius"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.freeradius.user.users.user"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/freeradius/user/deluser/{uuid}": {
            "post": {
                "operationId": "deleteFreeRadiusUser",
                "summary": "Removes a User",
                "tags": [
                    "FreeRadius"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/freeradius/user/toggleuser/{uuid}": {
            "post": {
                "operationId": "toggleFreeRadiusUser",
                "summary": "Toggle a User",
                "tags": [
                    "FreeRadius"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/freeradius/user/adduser": {
            "description": "User",
            "summary": "Create FreeRadius User items",
            "post": {
                "operationId": "addFreeRadiusUser",
                "summary": "Add a new User",
                "tags": [
                    "FreeRadius"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.freeradius.user.users.user"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/freeradius/user/searchuser": {
            "post": {
                "operationId": "searchFreeRadiusUser",
                "summary": "Search a User",
                "tags": [
                    "FreeRadius"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ftpproxy/settings/getproxy/{uuid}": {
            "get": {
                "operationId": "getFtpProxyProxy",
                "summary": "Returns a Proxy",
                "tags": [
                    "FtpProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Proxy": {
                                            "$ref": "#/components/schemas/OPNsense.ftpproxies.ftpproxy"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ftpproxy/settings/setproxy/{uuid}": {
            "post": {
                "operationId": "setFtpProxyProxy",
                "summary": "Updates a Proxy",
                "tags": [
                    "FtpProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.ftpproxies.ftpproxy"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ftpproxy/settings/delproxy/{uuid}": {
            "post": {
                "operationId": "deleteFtpProxyProxy",
                "summary": "Removes a Proxy",
                "tags": [
                    "FtpProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ftpproxy/settings/toggleproxy/{uuid}": {
            "post": {
                "operationId": "toggleFtpProxyProxy",
                "summary": "Toggle a Proxy",
                "tags": [
                    "FtpProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/ftpproxy/settings/addproxy": {
            "description": "Proxy",
            "summary": "Create FtpProxy Proxy items",
            "post": {
                "operationId": "addFtpProxyProxy",
                "summary": "Add a new Proxy",
                "tags": [
                    "FtpProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.ftpproxies.ftpproxy"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/ftpproxy/settings/searchproxy": {
            "post": {
                "operationId": "searchFtpProxyProxy",
                "summary": "Search a Proxy",
                "tags": [
                    "FtpProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getacl/{uuid}": {
            "get": {
                "operationId": "getHAProxyAcl",
                "summary": "Returns a Acl",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Acl": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.acls.acl"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setacl/{uuid}": {
            "post": {
                "operationId": "setHAProxyAcl",
                "summary": "Updates a Acl",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.acls.acl"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/delacl/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyAcl",
                "summary": "Removes a Acl",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/addacl": {
            "description": "Acl",
            "summary": "Create HAProxy Acl items",
            "post": {
                "operationId": "addHAProxyAcl",
                "summary": "Add a new Acl",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.acls.acl"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/haproxy/settings/searchacls": {
            "post": {
                "operationId": "searchHAProxyAcl",
                "summary": "Search a Acl",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getaction/{uuid}": {
            "get": {
                "operationId": "getHAProxyAction",
                "summary": "Returns a Action",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Action": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.actions.action"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setaction/{uuid}": {
            "post": {
                "operationId": "setHAProxyAction",
                "summary": "Updates a Action",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.actions.action"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/delaction/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyAction",
                "summary": "Removes a Action",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/addaction": {
            "description": "Action",
            "summary": "Create HAProxy Action items",
            "post": {
                "operationId": "addHAProxyAction",
                "summary": "Add a new Action",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.actions.action"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/haproxy/settings/searchactions": {
            "post": {
                "operationId": "searchHAProxyAction",
                "summary": "Search a Action",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getbackend/{uuid}": {
            "get": {
                "operationId": "getHAProxyBackend",
                "summary": "Returns a Backend",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Backend": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.backends.backend"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setbackend/{uuid}": {
            "post": {
                "operationId": "setHAProxyBackend",
                "summary": "Updates a Backend",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.backends.backend"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/delbackend/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyBackend",
                "summary": "Removes a Backend",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/togglebackend/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleHAProxyBackend",
                "summary": "Toggle a Backend",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/haproxy/settings/addbackend": {
            "description": "Backend",
            "summary": "Create HAProxy Backend items",
            "post": {
                "operationId": "addHAProxyBackend",
                "summary": "Add a new Backend",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.backends.backend"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/haproxy/settings/searchbackends": {
            "post": {
                "operationId": "searchHAProxyBackend",
                "summary": "Search a Backend",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/geterrorfile/{uuid}": {
            "get": {
                "operationId": "getHAProxyErrorFile",
                "summary": "Returns a ErrorFile",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ErrorFile": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.errorfiles.errorfile"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/seterrorfile/{uuid}": {
            "post": {
                "operationId": "setHAProxyErrorFile",
                "summary": "Updates a ErrorFile",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.errorfiles.errorfile"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/delerrorfile/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyErrorFile",
                "summary": "Removes a ErrorFile",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/adderrorfile": {
            "description": "ErrorFile",
            "summary": "Create HAProxy ErrorFile items",
            "post": {
                "operationId": "addHAProxyErrorFile",
                "summary": "Add a new ErrorFile",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.errorfiles.errorfile"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/haproxy/settings/searcherrorfiles": {
            "post": {
                "operationId": "searchHAProxyErrorFile",
                "summary": "Search a ErrorFile",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getfrontend/{uuid}": {
            "get": {
                "operationId": "getHAProxyFrontend",
                "summary": "Returns a Frontend",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Frontend": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.frontends.frontend"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setfrontend/{uuid}": {
            "post": {
                "operationId": "setHAProxyFrontend",
                "summary": "Updates a Frontend",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.frontends.frontend"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/delfrontend/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyFrontend",
                "summary": "Removes a Frontend",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/togglefrontend/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleHAProxyFrontend",
                "summary": "Toggle a Frontend",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/haproxy/settings/addfrontend": {
            "description": "Frontend",
            "summary": "Create HAProxy Frontend items",
            "post": {
                "operationId": "addHAProxyFrontend",
                "summary": "Add a new Frontend",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.frontends.frontend"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/haproxy/settings/searchfrontends": {
            "post": {
                "operationId": "searchHAProxyFrontend",
                "summary": "Search a Frontend",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/gethealthcheck/{uuid}": {
            "get": {
                "operationId": "getHAProxyHealthcheck",
                "summary": "Returns a Healthcheck",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Healthcheck": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.healthchecks.healthcheck"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/sethealthcheck/{uuid}": {
            "post": {
                "operationId": "setHAProxyHealthcheck",
                "summary": "Updates a Healthcheck",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.healthchecks.healthcheck"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/delhealthcheck/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyHealthcheck",
                "summary": "Removes a Healthcheck",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/addhealthcheck": {
            "description": "Healthcheck",
            "summary": "Create HAProxy Healthcheck items",
            "post": {
                "operationId": "addHAProxyHealthcheck",
                "summary": "Add a new Healthcheck",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.healthchecks.healthcheck"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/haproxy/settings/searchhealthchecks": {
            "post": {
                "operationId": "searchHAProxyHealthcheck",
                "summary": "Search a Healthcheck",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getlua/{uuid}": {
            "get": {
                "operationId": "getHAProxyLuaScript",
                "summary": "Returns a LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "LuaScript": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.luas.lua"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setlua/{uuid}": {
            "post": {
                "operationId": "setHAProxyLuaScript",
                "summary": "Updates a LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.luas.lua"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/dellua/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyLuaScript",
                "summary": "Removes a LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/togglelua/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleHAProxyLuaScript",
                "summary": "Toggle a LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/haproxy/settings/addlua": {
            "description": "LuaScript",
            "summary": "Create HAProxy LuaScript items",
            "post": {
                "operationId": "addHAProxyLuaScript",
                "summary": "Add a new LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.luas.lua"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/haproxy/settings/searchluas": {
            "post": {
                "operationId": "searchHAProxyLuaScript",
                "summary": "Search a LuaScript",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/getserver/{uuid}": {
            "get": {
                "operationId": "getHAProxyServer",
                "summary": "Returns a Server",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Server": {
                                            "$ref": "#/components/schemas/OPNsense.HAProxy.servers.server"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/haproxy/settings/setserver/{uuid}": {
            "post": {
                "operationId": "setHAProxyServer",
                "summary": "Updates a Server",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.servers.server"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/delserver/{uuid}": {
            "post": {
                "operationId": "deleteHAProxyServer",
                "summary": "Removes a Server",
                "tags": [
                    "HAProxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/haproxy/settings/addserver": {
            "description": "Server",
            "summary": "Create HAProxy Server items",
            "post": {
                "operationId": "addHAProxyServer",
                "summary": "Add a new Server",
                "tags": [
                    "HAProxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.HAProxy.servers.server"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/haproxy/settings/searchservers": {
            "post": {
                "operationId": "searchHAProxyServer",
                "summary": "Search a Server",
                "tags": [
                    "HAProxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ids/settings/setrule/{uuid}": {
            "post": {
                "operationId": "setIDSRule",
                "summary": "Updates a Rule",
                "tags": [
                    "IDS"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.IDS.rules.rule"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ids/settings/togglerule/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleIDSRule",
                "summary": "Toggle a Rule",
                "tags": [
                    "IDS"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/ids/settings/getuserrule/{uuid}": {
            "get": {
                "operationId": "getIDSUserRule",
                "summary": "Returns a UserRule",
                "tags": [
                    "IDS"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UserRule": {
                                            "$ref": "#/components/schemas/OPNsense.IDS.userDefinedRules.rule"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ids/settings/setuserrule/{uuid}": {
            "post": {
                "operationId": "setIDSUserRule",
                "summary": "Updates a UserRule",
                "tags": [
                    "IDS"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.IDS.userDefinedRules.rule"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ids/settings/deluserrule/{uuid}": {
            "post": {
                "operationId": "deleteIDSUserRule",
                "summary": "Removes a UserRule",
                "tags": [
                    "IDS"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ids/settings/toggleuserrule/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleIDSUserRule",
                "summary": "Toggle a UserRule",
                "tags": [
                    "IDS"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/ids/settings/adduserrule": {
            "description": "UserRule",
            "summary": "Create IDS UserRule items",
            "post": {
                "operationId": "addIDSUserRule",
                "summary": "Add a new UserRule",
                "tags": [
                    "IDS"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.IDS.userDefinedRules.rule"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/ids/settings/searchuserrule": {
            "post": {
                "operationId": "searchIDSUserRule",
                "summary": "Search a UserRule",
                "tags": [
                    "IDS"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/get/alert/{uuid}": {
            "get": {
                "operationId": "getMonitAlert",
                "summary": "Returns a Alert",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Alert": {
                                            "$ref": "#/components/schemas/OPNsense.monit.alert"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/set/alert/{uuid}": {
            "post": {
                "operationId": "setMonitAlert",
                "summary": "Updates a Alert",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.monit.alert"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/del/alert/{uuid}": {
            "post": {
                "operationId": "deleteMonitAlert",
                "summary": "Removes a Alert",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/toggle/alert/{uuid}": {
            "post": {
                "operationId": "toggleMonitAlert",
                "summary": "Toggle a Alert",
                "tags": [
                    "Monit"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/monit/settings/add/alert": {
            "description": "Alert",
            "summary": "Create Monit Alert items",
            "post": {
                "operationId": "addMonitAlert",
                "summary": "Add a new Alert",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.monit.alert"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/monit/settings/search/alert": {
            "post": {
                "operationId": "searchMonitAlert",
                "summary": "Search a Alert",
                "tags": [
                    "Monit"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/get/service/{uuid}": {
            "get": {
                "operationId": "getMonitService",
                "summary": "Returns a Service",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Service": {
                                            "$ref": "#/components/schemas/OPNsense.monit.service"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/set/service/{uuid}": {
            "post": {
                "operationId": "setMonitService",
                "summary": "Updates a Service",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.monit.service"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/del/service/{uuid}": {
            "post": {
                "operationId": "deleteMonitService",
                "summary": "Removes a Service",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/toggle/service/{uuid}": {
            "post": {
                "operationId": "toggleMonitService",
                "summary": "Toggle a Service",
                "tags": [
                    "Monit"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/monit/settings/add/service": {
            "description": "Service",
            "summary": "Create Monit Service items",
            "post": {
                "operationId": "addMonitService",
                "summary": "Add a new Service",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.monit.service"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/monit/settings/search/service": {
            "post": {
                "operationId": "searchMonitService",
                "summary": "Search a Service",
                "tags": [
                    "Monit"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/get/test/{uuid}": {
            "get": {
                "operationId": "getMonitTest",
                "summary": "Returns a Test",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Test": {
                                            "$ref": "#/components/schemas/OPNsense.monit.test"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/monit/settings/set/test/{uuid}": {
            "post": {
                "operationId": "setMonitTest",
                "summary": "Updates a Test",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.monit.test"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/del/test/{uuid}": {
            "post": {
                "operationId": "deleteMonitTest",
                "summary": "Removes a Test",
                "tags": [
                    "Monit"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/monit/settings/add/test": {
            "description": "Test",
            "summary": "Create Monit Test items",
            "post": {
                "operationId": "addMonitTest",
                "summary": "Add a new Test",
                "tags": [
                    "Monit"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.monit.test"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/monit/settings/search/test": {
            "post": {
                "operationId": "searchMonitTest",
                "summary": "Search a Test",
                "tags": [
                    "Monit"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/domain/getdomain/{uuid}": {
            "get": {
                "operationId": "getPostfixDomain",
                "summary": "Returns a Domain",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Domain": {
                                            "$ref": "#/components/schemas/OPNsense.postfix.domain.domains.domain"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/domain/setdomain/{uuid}": {
            "post": {
                "operationId": "setPostfixDomain",
                "summary": "Updates a Domain",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.postfix.domain.domains.domain"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/domain/deldomain/{uuid}": {
            "post": {
                "operationId": "deletePostfixDomain",
                "summary": "Removes a Domain",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/domain/toggledomain/{uuid}": {
            "post": {
                "operationId": "togglePostfixDomain",
                "summary": "Toggle a Domain",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/postfix/domain/adddomain": {
            "description": "Domain",
            "summary": "Create Postfix Domain items",
            "post": {
                "operationId": "addPostfixDomain",
                "summary": "Add a new Domain",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.postfix.domain.domains.domain"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/postfix/domain/searchdomain": {
            "post": {
                "operationId": "searchPostfixDomain",
                "summary": "Search a Domain",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/recipient/getrecipient/{uuid}": {
            "get": {
                "operationId": "getPostfixRecipient",
                "summary": "Returns a Recipient",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Recipient": {
                                            "$ref": "#/components/schemas/OPNsense.postfix.recipient.recipients.recipient"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/recipient/setrecipient/{uuid}": {
            "post": {
                "operationId": "setPostfixRecipient",
                "summary": "Updates a Recipient",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.postfix.recipient.recipients.recipient"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/recipient/delrecipient/{uuid}": {
            "post": {
                "operationId": "deletePostfixRecipient",
                "summary": "Removes a Recipient",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/recipient/togglerecipient/{uuid}": {
            "post": {
                "operationId": "togglePostfixRecipient",
                "summary": "Toggle a Recipient",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/postfix/recipient/addrecipient": {
            "description": "Recipient",
            "summary": "Create Postfix Recipient items",
            "post": {
                "operationId": "addPostfixRecipient",
                "summary": "Add a new Recipient",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.postfix.recipient.recipients.recipient"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/postfix/recipient/searchrecipient": {
            "post": {
                "operationId": "searchPostfixRecipient",
                "summary": "Search a Recipient",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/sender/getsender/{uuid}": {
            "get": {
                "operationId": "getPostfixSender",
                "summary": "Returns a Sender",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Sender": {
                                            "$ref": "#/components/schemas/OPNsense.postfix.sender.senders.sender"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/postfix/sender/setsender/{uuid}": {
            "post": {
                "operationId": "setPostfixSender",
                "summary": "Updates a Sender",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.postfix.sender.senders.sender"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/sender/delsender/{uuid}": {
            "post": {
                "operationId": "deletePostfixSender",
                "summary": "Removes a Sender",
                "tags": [
                    "Postfix"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/postfix/sender/togglesender/{uuid}": {
            "post": {
                "operationId": "togglePostfixSender",
                "summary": "Toggle a Sender",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/postfix/sender/addsender": {
            "description": "Sender",
            "summary": "Create Postfix Sender items",
            "post": {
                "operationId": "addPostfixSender",
                "summary": "Add a new Sender",
                "tags": [
                    "Postfix"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.postfix.sender.senders.sender"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/postfix/sender/searchsender": {
            "post": {
                "operationId": "searchPostfixSender",
                "summary": "Search a Sender",
                "tags": [
                    "Postfix"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/proxy/settings/getremoteblacklist/{uuid}": {
            "get": {
                "operationId": "getProxyRemoteBlacklist",
                "summary": "Returns a RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "RemoteBlacklist": {
                                            "$ref": "#/components/schemas/OPNsense.proxy.forward.acl.remoteACLs.blacklists.blacklist"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxy/settings/setremoteblacklist/{uuid}": {
            "post": {
                "operationId": "setProxyRemoteBlacklist",
                "summary": "Updates a RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.proxy.forward.acl.remoteACLs.blacklists.blacklist"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/proxy/settings/delremoteblacklist/{uuid}": {
            "post": {
                "operationId": "deleteProxyRemoteBlacklist",
                "summary": "Removes a RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/proxy/settings/toggleremoteblacklist/{uuid}": {
            "post": {
                "operationId": "toggleProxyRemoteBlacklist",
                "summary": "Toggle a RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/proxy/settings/addremoteblacklist": {
            "description": "RemoteBlacklist",
            "summary": "Create Proxy RemoteBlacklist items",
            "post": {
                "operationId": "addProxyRemoteBlacklist",
                "summary": "Add a new RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.proxy.forward.acl.remoteACLs.blacklists.blacklist"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/proxy/settings/searchremoteblacklists": {
            "post": {
                "operationId": "searchProxyRemoteBlacklist",
                "summary": "Search a RemoteBlacklist",
                "tags": [
                    "Proxy"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/proxyuseracl/settings/getacl/{uuid}": {
            "get": {
                "operationId": "getProxyUserACLUserACL",
                "summary": "Returns a UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "UserACL": {
                                            "$ref": "#/components/schemas/OPNsense.ProxyUserACL.general.ACLs.ACL"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/proxyuseracl/settings/setacl/{uuid}": {
            "post": {
                "operationId": "setProxyUserACLUserACL",
                "summary": "Updates a UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.ProxyUserACL.general.ACLs.ACL"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/proxyuseracl/settings/delacl/{uuid}": {
            "post": {
                "operationId": "deleteProxyUserACLUserACL",
                "summary": "Removes a UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/proxyuseracl/settings/toggleacl/{uuid}": {
            "post": {
                "operationId": "toggleProxyUserACLUserACL",
                "summary": "Toggle a UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/proxyuseracl/settings/addacl": {
            "description": "UserACL",
            "summary": "Create ProxyUserACL UserACL items",
            "post": {
                "operationId": "addProxyUserACLUserACL",
                "summary": "Add a new UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.ProxyUserACL.general.ACLs.ACL"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/proxyuseracl/settings/searchacl": {
            "post": {
                "operationId": "searchProxyUserACLUserACL",
                "summary": "Search a UserACL",
                "tags": [
                    "ProxyUserACL"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/getaspath/{uuid}": {
            "get": {
                "operationId": "getQuaggaBGPAspath",
                "summary": "Returns a BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BGPAspath": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.bgp.aspaths.aspath"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/setaspath/{uuid}": {
            "post": {
                "operationId": "setQuaggaBGPAspath",
                "summary": "Updates a BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.bgp.aspaths.aspath"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/delaspath/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaBGPAspath",
                "summary": "Removes a BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/toggleaspath/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaBGPAspath",
                "summary": "Toggle a BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/bgp/addaspath": {
            "description": "BGPAspath",
            "summary": "Create Quagga BGPAspath items",
            "post": {
                "operationId": "addQuaggaBGPAspath",
                "summary": "Add a new BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.bgp.aspaths.aspath"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/quagga/bgp/searchaspath": {
            "post": {
                "operationId": "searchQuaggaBGPAspath",
                "summary": "Search a BGPAspath",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/getneighbor/{uuid}": {
            "get": {
                "operationId": "getQuaggaBGPNeighbor",
                "summary": "Returns a BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BGPNeighbor": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.bgp.neighbors.neighbor"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/setneighbor/{uuid}": {
            "post": {
                "operationId": "setQuaggaBGPNeighbor",
                "summary": "Updates a BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.bgp.neighbors.neighbor"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/delneighbor/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaBGPNeighbor",
                "summary": "Removes a BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/toggleneighbor/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaBGPNeighbor",
                "summary": "Toggle a BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/bgp/addneighbor": {
            "description": "BGPNeighbor",
            "summary": "Create Quagga BGPNeighbor items",
            "post": {
                "operationId": "addQuaggaBGPNeighbor",
                "summary": "Add a new BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.bgp.neighbors.neighbor"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/quagga/bgp/searchneighbor": {
            "post": {
                "operationId": "searchQuaggaBGPNeighbor",
                "summary": "Search a BGPNeighbor",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/getprefixlist/{uuid}": {
            "get": {
                "operationId": "getQuaggaBGPPrefixlist",
                "summary": "Returns a BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BGPPrefixlist": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.bgp.prefixlists.prefixlist"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/setprefixlist/{uuid}": {
            "post": {
                "operationId": "setQuaggaBGPPrefixlist",
                "summary": "Updates a BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.bgp.prefixlists.prefixlist"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/delprefixlist/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaBGPPrefixlist",
                "summary": "Removes a BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/toggleprefixlist/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaBGPPrefixlist",
                "summary": "Toggle a BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/bgp/addprefixlist": {
            "description": "BGPPrefixlist",
            "summary": "Create Quagga BGPPrefixlist items",
            "post": {
                "operationId": "addQuaggaBGPPrefixlist",
                "summary": "Add a new BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.bgp.prefixlists.prefixlist"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/quagga/bgp/searchprefixlist": {
            "post": {
                "operationId": "searchQuaggaBGPPrefixlist",
                "summary": "Search a BGPPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/getroutemap/{uuid}": {
            "get": {
                "operationId": "getQuaggaBGPRoutemap",
                "summary": "Returns a BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BGPRoutemap": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.bgp.routemaps.routemap"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/bgp/setroutemap/{uuid}": {
            "post": {
                "operationId": "setQuaggaBGPRoutemap",
                "summary": "Updates a BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.bgp.routemaps.routemap"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/delroutemap/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaBGPRoutemap",
                "summary": "Removes a BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/bgp/toggleroutemap/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaBGPRoutemap",
                "summary": "Toggle a BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/bgp/addroutemap": {
            "description": "BGPRoutemap",
            "summary": "Create Quagga BGPRoutemap items",
            "post": {
                "operationId": "addQuaggaBGPRoutemap",
                "summary": "Add a new BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.bgp.routemaps.routemap"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/quagga/bgp/searchroutemap": {
            "post": {
                "operationId": "searchQuaggaBGPRoutemap",
                "summary": "Search a BGPRoutemap",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospf6settings/getinterface/{uuid}": {
            "get": {
                "operationId": "getQuaggaOspf6Interface",
                "summary": "Returns a Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Ospf6Interface": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.ospf6.interfaces.interface"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospf6settings/setinterface/{uuid}": {
            "post": {
                "operationId": "setQuaggaOspf6Interface",
                "summary": "Updates a Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.ospf6.interfaces.interface"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospf6settings/delinterface/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaOspf6Interface",
                "summary": "Removes a Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospf6settings/toggleinterface/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaOspf6Interface",
                "summary": "Toggle a Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/ospf6settings/addinterface": {
            "description": "Ospf6Interface",
            "summary": "Create Quagga Ospf6Interface items",
            "post": {
                "operationId": "addQuaggaOspf6Interface",
                "summary": "Add a new Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.ospf6.interfaces.interface"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/quagga/ospf6settings/searchinterface": {
            "post": {
                "operationId": "searchQuaggaOspf6Interface",
                "summary": "Search a Ospf6Interface",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/getinterface/{uuid}": {
            "get": {
                "operationId": "getQuaggaOspfInterface",
                "summary": "Returns a OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "OspfInterface": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.ospf.interfaces.interface"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/setinterface/{uuid}": {
            "post": {
                "operationId": "setQuaggaOspfInterface",
                "summary": "Updates a OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.ospf.interfaces.interface"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/delinterface/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaOspfInterface",
                "summary": "Removes a OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/toggleinterface/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaOspfInterface",
                "summary": "Toggle a OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/ospfsettings/addinterface": {
            "description": "OspfInterface",
            "summary": "Create Quagga OspfInterface items",
            "post": {
                "operationId": "addQuaggaOspfInterface",
                "summary": "Add a new OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.ospf.interfaces.interface"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/quagga/ospfsettings/searchinterface": {
            "post": {
                "operationId": "searchQuaggaOspfInterface",
                "summary": "Search a OspfInterface",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/getnetwork/{uuid}": {
            "get": {
                "operationId": "getQuaggaOspfNetwork",
                "summary": "Returns a OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "OspfNetwork": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.ospf.networks.network"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/setnetwork/{uuid}": {
            "post": {
                "operationId": "setQuaggaOspfNetwork",
                "summary": "Updates a OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.ospf.networks.network"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/delnetwork/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaOspfNetwork",
                "summary": "Removes a OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/togglenetwork/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaOspfNetwork",
                "summary": "Toggle a OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/ospfsettings/addnetwork": {
            "description": "OspfNetwork",
            "summary": "Create Quagga OspfNetwork items",
            "post": {
                "operationId": "addQuaggaOspfNetwork",
                "summary": "Add a new OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.ospf.networks.network"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/quagga/ospfsettings/searchnetwork": {
            "post": {
                "operationId": "searchQuaggaOspfNetwork",
                "summary": "Search a OspfNetwork",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/getprefixlist/{uuid}": {
            "get": {
                "operationId": "getQuaggaOspfPrefixlist",
                "summary": "Returns a OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "OspfPrefixlist": {
                                            "$ref": "#/components/schemas/OPNsense.quagga.ospf.prefixlists.prefixlist"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quagga/ospfsettings/setprefixlist/{uuid}": {
            "post": {
                "operationId": "setQuaggaOspfPrefixlist",
                "summary": "Updates a OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.ospf.prefixlists.prefixlist"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/delprefixlist/{uuid}": {
            "post": {
                "operationId": "deleteQuaggaOspfPrefixlist",
                "summary": "Removes a OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/quagga/ospfsettings/toggleprefixlist/{uuid}": {
            "post": {
                "operationId": "toggleQuaggaOspfPrefixlist",
                "summary": "Toggle a OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/quagga/ospfsettings/addprefixlist": {
            "description": "OspfPrefixlist",
            "summary": "Create Quagga OspfPrefixlist items",
            "post": {
                "operationId": "addQuaggaOspfPrefixlist",
                "summary": "Add a new OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.quagga.ospf.prefixlists.prefixlist"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/quagga/ospfsettings/searchprefixlist": {
            "post": {
                "operationId": "searchQuaggaOspfPrefixlist",
                "summary": "Search a OspfPrefixlist",
                "tags": [
                    "Quagga"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/get/host/{uuid}": {
            "get": {
                "operationId": "getRelaydHost",
                "summary": "Returns a Host",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Host": {
                                            "$ref": "#/components/schemas/relayd.host"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/set/host/{uuid}": {
            "post": {
                "operationId": "setRelaydHost",
                "summary": "Updates a Host",
                "tags": [
                    "Relayd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/relayd.host"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/del/host/{uuid}": {
            "post": {
                "operationId": "deleteRelaydHost",
                "summary": "Removes a Host",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/search/host/": {
            "post": {
                "operationId": "searchRelaydHost",
                "summary": "Search a Host",
                "tags": [
                    "Relayd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/get/protocol/{uuid}": {
            "get": {
                "operationId": "getRelaydProtocol",
                "summary": "Returns a Protocol",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Protocol": {
                                            "$ref": "#/components/schemas/relayd.protocol"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/set/protocol/{uuid}": {
            "post": {
                "operationId": "setRelaydProtocol",
                "summary": "Updates a Protocol",
                "tags": [
                    "Relayd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/relayd.protocol"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/del/protocol/{uuid}": {
            "post": {
                "operationId": "deleteRelaydProtocol",
                "summary": "Removes a Protocol",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/search/protocol/": {
            "post": {
                "operationId": "searchRelaydProtocol",
                "summary": "Search a Protocol",
                "tags": [
                    "Relayd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/get/table/{uuid}": {
            "get": {
                "operationId": "getRelaydTable",
                "summary": "Returns a Table",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Table": {
                                            "$ref": "#/components/schemas/relayd.table"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/set/table/{uuid}": {
            "post": {
                "operationId": "setRelaydTable",
                "summary": "Updates a Table",
                "tags": [
                    "Relayd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/relayd.table"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/del/table/{uuid}": {
            "post": {
                "operationId": "deleteRelaydTable",
                "summary": "Removes a Table",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/search/table/": {
            "post": {
                "operationId": "searchRelaydTable",
                "summary": "Search a Table",
                "tags": [
                    "Relayd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/get/tablecheck/{uuid}": {
            "get": {
                "operationId": "getRelaydTableCheck",
                "summary": "Returns a TableCheck",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "TableCheck": {
                                            "$ref": "#/components/schemas/relayd.tablecheck"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/set/tablecheck/{uuid}": {
            "post": {
                "operationId": "setRelaydTableCheck",
                "summary": "Updates a TableCheck",
                "tags": [
                    "Relayd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/relayd.tablecheck"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/del/tablecheck/{uuid}": {
            "post": {
                "operationId": "deleteRelaydTableCheck",
                "summary": "Removes a TableCheck",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/search/tablecheck/": {
            "post": {
                "operationId": "searchRelaydTableCheck",
                "summary": "Search a TableCheck",
                "tags": [
                    "Relayd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/get/virtualserver/{uuid}": {
            "get": {
                "operationId": "getRelaydVirtualServer",
                "summary": "Returns a VirtualServer",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "VirtualServer": {
                                            "$ref": "#/components/schemas/relayd.virtualserver"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/relayd/settings/set/virtualserver/{uuid}": {
            "post": {
                "operationId": "setRelaydVirtualServer",
                "summary": "Updates a VirtualServer",
                "tags": [
                    "Relayd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/relayd.virtualserver"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/del/virtualserver/{uuid}": {
            "post": {
                "operationId": "deleteRelaydVirtualServer",
                "summary": "Removes a VirtualServer",
                "tags": [
                    "Relayd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/relayd/settings/search/virtualserver/": {
            "post": {
                "operationId": "searchRelaydVirtualServer",
                "summary": "Search a VirtualServer",
                "tags": [
                    "Relayd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/routes/routes/getroute/{uuid}": {
            "get": {
                "operationId": "getRoutesRoute",
                "summary": "Returns a Route",
                "tags": [
                    "Routes"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Route": {
                                            "$ref": "#/components/schemas/staticroutes.route"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/routes/routes/setroute/{uuid}": {
            "post": {
                "operationId": "setRoutesRoute",
                "summary": "Updates a Route",
                "tags": [
                    "Routes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/staticroutes.route"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/routes/routes/delroute/{uuid}": {
            "post": {
                "operationId": "deleteRoutesRoute",
                "summary": "Removes a Route",
                "tags": [
                    "Routes"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/routes/routes/toggleroute/{uuid}/{disabled}": {
            "post": {
                "operationId": "toggleRoutesRoute",
                "summary": "Toggle a Route",
                "tags": [
                    "Routes"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/disabled"
                    }
                ]
            }
        },
        "/routes/routes/addroute": {
            "description": "Route",
            "summary": "Create Routes Route items",
            "post": {
                "operationId": "addRoutesRoute",
                "summary": "Add a new Route",
                "tags": [
                    "Routes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/staticroutes.route"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/routes/routes/searchroute": {
            "post": {
                "operationId": "searchRoutesRoute",
                "summary": "Search a Route",
                "tags": [
                    "Routes"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/siproxd/domain/getdomain/{uuid}": {
            "get": {
                "operationId": "getSiproxdDomain",
                "summary": "Returns a Domain",
                "tags": [
                    "Siproxd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Domain": {
                                            "$ref": "#/components/schemas/OPNsense.siproxd.domain.domains.domain"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siproxd/domain/setdomain/{uuid}": {
            "post": {
                "operationId": "setSiproxdDomain",
                "summary": "Updates a Domain",
                "tags": [
                    "Siproxd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.siproxd.domain.domains.domain"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/siproxd/domain/deldomain/{uuid}": {
            "post": {
                "operationId": "deleteSiproxdDomain",
                "summary": "Removes a Domain",
                "tags": [
                    "Siproxd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/siproxd/domain/toggledomain/{uuid}": {
            "post": {
                "operationId": "toggleSiproxdDomain",
                "summary": "Toggle a Domain",
                "tags": [
                    "Siproxd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/siproxd/domain/adddomain": {
            "description": "Domain",
            "summary": "Create Siproxd Domain items",
            "post": {
                "operationId": "addSiproxdDomain",
                "summary": "Add a new Domain",
                "tags": [
                    "Siproxd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.siproxd.domain.domains.domain"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/siproxd/domain/searchdomain": {
            "post": {
                "operationId": "searchSiproxdDomain",
                "summary": "Search a Domain",
                "tags": [
                    "Siproxd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/siproxd/user/getuser/{uuid}": {
            "get": {
                "operationId": "getSiproxdUser",
                "summary": "Returns a User",
                "tags": [
                    "Siproxd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "User": {
                                            "$ref": "#/components/schemas/OPNsense.siproxd.user.users.user"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/siproxd/user/setuser/{uuid}": {
            "post": {
                "operationId": "setSiproxdUser",
                "summary": "Updates a User",
                "tags": [
                    "Siproxd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.siproxd.user.users.user"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/siproxd/user/deluser/{uuid}": {
            "post": {
                "operationId": "deleteSiproxdUser",
                "summary": "Removes a User",
                "tags": [
                    "Siproxd"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/siproxd/user/toggleuser/{uuid}": {
            "post": {
                "operationId": "toggleSiproxdUser",
                "summary": "Toggle a User",
                "tags": [
                    "Siproxd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/siproxd/user/adduser": {
            "description": "User",
            "summary": "Create Siproxd User items",
            "post": {
                "operationId": "addSiproxdUser",
                "summary": "Add a new User",
                "tags": [
                    "Siproxd"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.siproxd.user.users.user"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/siproxd/user/searchuser": {
            "post": {
                "operationId": "searchSiproxdUser",
                "summary": "Search a User",
                "tags": [
                    "Siproxd"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tinc/settings/gethost/{uuid}": {
            "get": {
                "operationId": "getTincHost",
                "summary": "Returns a Host",
                "tags": [
                    "Tinc"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Host": {
                                            "$ref": "#/components/schemas/OPNsense.Tinc.hosts.host"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tinc/settings/sethost/{uuid}": {
            "post": {
                "operationId": "setTincHost",
                "summary": "Updates a Host",
                "tags": [
                    "Tinc"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.Tinc.hosts.host"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tinc/settings/delhost/{uuid}": {
            "post": {
                "operationId": "deleteTincHost",
                "summary": "Removes a Host",
                "tags": [
                    "Tinc"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tinc/settings/togglehost/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleTincHost",
                "summary": "Toggle a Host",
                "tags": [
                    "Tinc"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tinc/settings/sethost": {
            "description": "Host",
            "summary": "Create Tinc Host items",
            "post": {
                "operationId": "addTincHost",
                "summary": "Add a new Host",
                "tags": [
                    "Tinc"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.Tinc.hosts.host"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/tinc/settings/searchhost": {
            "post": {
                "operationId": "searchTincHost",
                "summary": "Search a Host",
                "tags": [
                    "Tinc"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tinc/settings/getnetwork/{uuid}": {
            "get": {
                "operationId": "getTincNetwork",
                "summary": "Returns a Network",
                "tags": [
                    "Tinc"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Network": {
                                            "$ref": "#/components/schemas/OPNsense.Tinc.networks.network"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tinc/settings/setnetwork/{uuid}": {
            "post": {
                "operationId": "setTincNetwork",
                "summary": "Updates a Network",
                "tags": [
                    "Tinc"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.Tinc.networks.network"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tinc/settings/delnetwork/{uuid}": {
            "post": {
                "operationId": "deleteTincNetwork",
                "summary": "Removes a Network",
                "tags": [
                    "Tinc"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tinc/settings/togglenetwork/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleTincNetwork",
                "summary": "Toggle a Network",
                "tags": [
                    "Tinc"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tinc/settings/setnetwork": {
            "description": "Network",
            "summary": "Create Tinc Network items",
            "post": {
                "operationId": "addTincNetwork",
                "summary": "Add a new Network",
                "tags": [
                    "Tinc"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.Tinc.networks.network"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/tinc/settings/searchnetwork": {
            "post": {
                "operationId": "searchTincNetwork",
                "summary": "Search a Network",
                "tags": [
                    "Tinc"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/exitacl/getacl/{uuid}": {
            "get": {
                "operationId": "getTorExitacl",
                "summary": "Returns a Exitacl",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Exitacl": {
                                            "$ref": "#/components/schemas/OPNsense.tor.exitpolicy.policy"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/exitacl/setacl/{uuid}": {
            "post": {
                "operationId": "setTorExitacl",
                "summary": "Updates a Exitacl",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.tor.exitpolicy.policy"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/exitacl/delacl/{uuid}": {
            "post": {
                "operationId": "deleteTorExitacl",
                "summary": "Removes a Exitacl",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/exitacl/toggleacl/{uuid}": {
            "post": {
                "operationId": "toggleTorExitacl",
                "summary": "Toggle a Exitacl",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tor/exitacl/addacl": {
            "description": "Exitacl",
            "summary": "Create Tor Exitacl items",
            "post": {
                "operationId": "addTorExitacl",
                "summary": "Add a new Exitacl",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.tor.exitpolicy.policy"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/tor/exitacl/searchacl": {
            "post": {
                "operationId": "searchTorExitacl",
                "summary": "Search a Exitacl",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/hiddenservice/getservice/{uuid}": {
            "get": {
                "operationId": "getTorHiddenService",
                "summary": "Returns a HiddenService",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "HiddenService": {
                                            "$ref": "#/components/schemas/OPNsense.tor.hiddenservice.service"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/hiddenservice/setservice/{uuid}": {
            "post": {
                "operationId": "setTorHiddenService",
                "summary": "Updates a HiddenService",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.tor.hiddenservice.service"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/hiddenservice/delservice/{uuid}": {
            "post": {
                "operationId": "deleteTorHiddenService",
                "summary": "Removes a HiddenService",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/hiddenservice/toggleservice/{uuid}": {
            "post": {
                "operationId": "toggleTorHiddenService",
                "summary": "Toggle a HiddenService",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tor/hiddenservice/addservice": {
            "description": "HiddenService",
            "summary": "Create Tor HiddenService items",
            "post": {
                "operationId": "addTorHiddenService",
                "summary": "Add a new HiddenService",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.tor.hiddenservice.service"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/tor/hiddenservice/searchservice": {
            "post": {
                "operationId": "searchTorHiddenService",
                "summary": "Search a HiddenService",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/hiddenserviceacl/getacl/{uuid}": {
            "get": {
                "operationId": "getTorHiddenServiceACL",
                "summary": "Returns a HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "HiddenServiceACL": {
                                            "$ref": "#/components/schemas/OPNsense.tor.hiddenserviceacl.hiddenserviceacl"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/hiddenserviceacl/setacl/{uuid}": {
            "post": {
                "operationId": "setTorHiddenServiceACL",
                "summary": "Updates a HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.tor.hiddenserviceacl.hiddenserviceacl"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/hiddenserviceacl/delacl/{uuid}": {
            "post": {
                "operationId": "deleteTorHiddenServiceACL",
                "summary": "Removes a HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/hiddenserviceacl/toggleacl/{uuid}": {
            "post": {
                "operationId": "toggleTorHiddenServiceACL",
                "summary": "Toggle a HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tor/hiddenserviceacl/addacl": {
            "description": "HiddenServiceACL",
            "summary": "Create Tor HiddenServiceACL items",
            "post": {
                "operationId": "addTorHiddenServiceACL",
                "summary": "Add a new HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.tor.hiddenserviceacl.hiddenserviceacl"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/tor/hiddenserviceacl/searchacl": {
            "post": {
                "operationId": "searchTorHiddenServiceACL",
                "summary": "Search a HiddenServiceACL",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/general/gethidservauth/{uuid}": {
            "get": {
                "operationId": "getTorHiddenServiceAuth",
                "summary": "Returns a HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "HiddenServiceAuth": {
                                            "$ref": "#/components/schemas/OPNsense.tor.general.client_authentications.client_auth"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/general/sethidservauth/{uuid}": {
            "post": {
                "operationId": "setTorHiddenServiceAuth",
                "summary": "Updates a HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.tor.general.client_authentications.client_auth"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/general/delhidservauth/{uuid}": {
            "post": {
                "operationId": "deleteTorHiddenServiceAuth",
                "summary": "Removes a HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/general/togglehidservauth/{uuid}": {
            "post": {
                "operationId": "toggleTorHiddenServiceAuth",
                "summary": "Toggle a HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tor/general/addhidservauth": {
            "description": "HiddenServiceAuth",
            "summary": "Create Tor HiddenServiceAuth items",
            "post": {
                "operationId": "addTorHiddenServiceAuth",
                "summary": "Add a new HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.tor.general.client_authentications.client_auth"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/tor/general/searchhidservauth": {
            "post": {
                "operationId": "searchTorHiddenServiceAuth",
                "summary": "Search a HiddenServiceAuth",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/socksacl/getacl/{uuid}": {
            "get": {
                "operationId": "getTorSocksACL",
                "summary": "Returns a SocksACL",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "SocksACL": {
                                            "$ref": "#/components/schemas/OPNsense.tor.aclsockspolicy.policy"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tor/socksacl/setacl/{uuid}": {
            "post": {
                "operationId": "setTorSocksACL",
                "summary": "Updates a SocksACL",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.tor.aclsockspolicy.policy"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/socksacl/delacl/{uuid}": {
            "post": {
                "operationId": "deleteTorSocksACL",
                "summary": "Removes a SocksACL",
                "tags": [
                    "Tor"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/tor/socksacl/toggleacl/{uuid}": {
            "post": {
                "operationId": "toggleTorSocksACL",
                "summary": "Toggle a SocksACL",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/tor/socksacl/addacl": {
            "description": "SocksACL",
            "summary": "Create Tor SocksACL items",
            "post": {
                "operationId": "addTorSocksACL",
                "summary": "Add a new SocksACL",
                "tags": [
                    "Tor"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.tor.aclsockspolicy.policy"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/tor/socksacl/searchacl": {
            "post": {
                "operationId": "searchTorSocksACL",
                "summary": "Search a SocksACL",
                "tags": [
                    "Tor"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/getpipe/{uuid}": {
            "get": {
                "operationId": "getTrafficShaperPipe",
                "summary": "Returns a Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Pipe": {
                                            "$ref": "#/components/schemas/OPNsense.TrafficShaper.pipes.pipe"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/setpipe/{uuid}": {
            "post": {
                "operationId": "setTrafficShaperPipe",
                "summary": "Updates a Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.TrafficShaper.pipes.pipe"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/delpipe/{uuid}": {
            "post": {
                "operationId": "deleteTrafficShaperPipe",
                "summary": "Removes a Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/togglepipe/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleTrafficShaperPipe",
                "summary": "Toggle a Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/trafficshaper/settings/addpipe": {
            "description": "Pipe",
            "summary": "Create TrafficShaper Pipe items",
            "post": {
                "operationId": "addTrafficShaperPipe",
                "summary": "Add a new Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.TrafficShaper.pipes.pipe"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/trafficshaper/settings/searchpipes": {
            "post": {
                "operationId": "searchTrafficShaperPipe",
                "summary": "Search a Pipe",
                "tags": [
                    "TrafficShaper"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/getqueue/{uuid}": {
            "get": {
                "operationId": "getTrafficShaperQueue",
                "summary": "Returns a Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Queue": {
                                            "$ref": "#/components/schemas/OPNsense.TrafficShaper.queues.queue"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/setqueue/{uuid}": {
            "post": {
                "operationId": "setTrafficShaperQueue",
                "summary": "Updates a Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.TrafficShaper.queues.queue"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/delqueue/{uuid}": {
            "post": {
                "operationId": "deleteTrafficShaperQueue",
                "summary": "Removes a Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/togglequeue/{uuid}/{enabled}": {
            "post": {
                "operationId": "toggleTrafficShaperQueue",
                "summary": "Toggle a Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/trafficshaper/settings/addqueue": {
            "description": "Queue",
            "summary": "Create TrafficShaper Queue items",
            "post": {
                "operationId": "addTrafficShaperQueue",
                "summary": "Add a new Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.TrafficShaper.queues.queue"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/trafficshaper/settings/searchqueues": {
            "post": {
                "operationId": "searchTrafficShaperQueue",
                "summary": "Search a Queue",
                "tags": [
                    "TrafficShaper"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/getrule/{uuid}": {
            "get": {
                "operationId": "getTrafficShaperRule",
                "summary": "Returns a Rule",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Rule": {
                                            "$ref": "#/components/schemas/OPNsense.TrafficShaper.rules.rule"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trafficshaper/settings/setrule/{uuid}": {
            "post": {
                "operationId": "setTrafficShaperRule",
                "summary": "Updates a Rule",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.TrafficShaper.rules.rule"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/delrule/{uuid}": {
            "post": {
                "operationId": "deleteTrafficShaperRule",
                "summary": "Removes a Rule",
                "tags": [
                    "TrafficShaper"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/trafficshaper/settings/addrule": {
            "description": "Rule",
            "summary": "Create TrafficShaper Rule items",
            "post": {
                "operationId": "addTrafficShaperRule",
                "summary": "Add a new Rule",
                "tags": [
                    "TrafficShaper"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.TrafficShaper.rules.rule"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/trafficshaper/settings/searchrules": {
            "post": {
                "operationId": "searchTrafficShaperRule",
                "summary": "Search a Rule",
                "tags": [
                    "TrafficShaper"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/zerotier/network/get/{uuid}": {
            "get": {
                "operationId": "getZeroTierNetwork",
                "summary": "Returns a Network",
                "tags": [
                    "ZeroTier"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Network": {
                                            "$ref": "#/components/schemas/OPNsense.zerotier.networks.network"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/zerotier/network/set/{uuid}": {
            "post": {
                "operationId": "setZeroTierNetwork",
                "summary": "Updates a Network",
                "tags": [
                    "ZeroTier"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.zerotier.networks.network"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/zerotier/network/del/{uuid}": {
            "post": {
                "operationId": "deleteZeroTierNetwork",
                "summary": "Removes a Network",
                "tags": [
                    "ZeroTier"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/zerotier/network/toggle/{uuid}": {
            "post": {
                "operationId": "toggleZeroTierNetwork",
                "summary": "Toggle a Network",
                "tags": [
                    "ZeroTier"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/uuid"
                    },
                    {
                        "$ref": "#/components/parameters/enabled"
                    }
                ]
            }
        },
        "/zerotier/network/add": {
            "description": "Network",
            "summary": "Create ZeroTier Network items",
            "post": {
                "operationId": "addZeroTierNetwork",
                "summary": "Add a new Network",
                "tags": [
                    "ZeroTier"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OPNsense.zerotier.networks.network"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/zerotier/network/search": {
            "post": {
                "operationId": "searchZeroTierNetwork",
                "summary": "Search a Network",
                "tags": [
                    "ZeroTier"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "packagename": {
                "in": "path",
                "name": "package",
                "description": "The name of the package or plugin.",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "packageaction": {
                "in": "path",
                "name": "action",
                "description": "The action to perform on the package.",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "install",
                        "reinstall",
                        "remove",
                        "lock",
                        "unlock"
                    ]
                }
            },
            "uuid": {
                "in": "path",
                "name": "uuid",
                "description": "The universally unique identifier.",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "enabled": {
                "in": "path",
                "name": "enabled",
                "description": "Set the state to enabled or disabled.",
                "required": true,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "disabled": {
                "in": "path",
                "name": "disabled",
                "description": "Set the state to enabled or disabled.",
                "required": true,
                "schema": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            },
            "voucherprovider": {
                "in": "path",
                "name": "provider",
                "description": "The name of the Voucher Authentication Provider. (Case sensitive)",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "vouchergroup": {
                "in": "path",
                "name": "group",
                "description": "The name of the Voucher Group.",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        },
        "schemas": {
            "OptionList": {
                "type": "object",
                "additionalProperties": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string"
                        },
                        "selected": {
                            "type": "integer"
                        }
                    }
                }
            },
            "OPNsense.AcmeClient.accounts.account": {
                "type": "object",
                "properties": {
                    "certificateAuthority": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "email": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    }
                },
                "required": [
                    "certificateAuthority",
                    "enabled",
                    "name"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.AcmeClient.actions.action": {
                "type": "object",
                "properties": {
                    "configd": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "type": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "enabled",
                    "name",
                    "type"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.AcmeClient.certificates.certificate": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "altNames": {
                        "$ref": "#/components/schemas/OptionList",
                        "pattern": "/^[^\\s^\\t^;^\\\\^\\/^(^)^\\[^\\]]{1,65535}$/u"
                    },
                    "autoRenewal": {
                        "type": "boolean"
                    },
                    "certRefId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\s^\\t^,^;^\\\\^\\/^(^)^\\[^\\]]{1,255}$/u"
                    },
                    "renewInterval": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 60
                    },
                    "restartActions": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "statusCode": {
                        "type": "integer",
                        "minimum": 100,
                        "maximum": 1000
                    },
                    "statusLastUpdate": {
                        "type": "integer"
                    },
                    "validationMethod": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "account",
                    "autoRenewal",
                    "enabled",
                    "name",
                    "renewInterval",
                    "validationMethod"
                ],
                "default": [
                    {
                        "autoRenewal": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "renewInterval": 60
                    }
                ]
            },
            "OPNsense.AcmeClient.validations.validation": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "dns_ad_key": {
                        "type": "string"
                    },
                    "dns_ali_key": {
                        "type": "string"
                    },
                    "dns_ali_secret": {
                        "type": "string"
                    },
                    "dns_aws_id": {
                        "type": "string"
                    },
                    "dns_aws_secret": {
                        "type": "string"
                    },
                    "dns_cf_email": {
                        "type": "string"
                    },
                    "dns_cf_key": {
                        "type": "string"
                    },
                    "dns_cloudns_auth_id": {
                        "type": "string"
                    },
                    "dns_cloudns_auth_password": {
                        "type": "string"
                    },
                    "dns_cloudns_sub_auth_id": {
                        "type": "string"
                    },
                    "dns_cx_key": {
                        "type": "string"
                    },
                    "dns_cx_secret": {
                        "type": "string"
                    },
                    "dns_cyon_password": {
                        "type": "string"
                    },
                    "dns_cyon_user": {
                        "type": "string"
                    },
                    "dns_dgon_key": {
                        "type": "string"
                    },
                    "dns_dnsimple_token": {
                        "type": "string"
                    },
                    "dns_do_password": {
                        "type": "string"
                    },
                    "dns_do_pid": {
                        "type": "string"
                    },
                    "dns_dp_id": {
                        "type": "string"
                    },
                    "dns_dp_key": {
                        "type": "string"
                    },
                    "dns_duckdns_token": {
                        "type": "string"
                    },
                    "dns_dynu_clientid": {
                        "type": "string"
                    },
                    "dns_dynu_secret": {
                        "type": "string"
                    },
                    "dns_dyn_customer": {
                        "type": "string"
                    },
                    "dns_dyn_password": {
                        "type": "string"
                    },
                    "dns_dyn_user": {
                        "type": "string"
                    },
                    "dns_freedns_password": {
                        "type": "string"
                    },
                    "dns_freedns_user": {
                        "type": "string"
                    },
                    "dns_gandi_livedns_key": {
                        "type": "string"
                    },
                    "dns_gd_key": {
                        "type": "string"
                    },
                    "dns_gd_secret": {
                        "type": "string"
                    },
                    "dns_he_password": {
                        "type": "string"
                    },
                    "dns_he_user": {
                        "type": "string"
                    },
                    "dns_infoblox_credentials": {
                        "type": "string"
                    },
                    "dns_infoblox_server": {
                        "type": "string"
                    },
                    "dns_ispconfig_api": {
                        "type": "string"
                    },
                    "dns_ispconfig_insecure": {
                        "type": "boolean"
                    },
                    "dns_ispconfig_password": {
                        "type": "string"
                    },
                    "dns_ispconfig_user": {
                        "type": "string"
                    },
                    "dns_lexicon_provider": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "dns_lexicon_token": {
                        "type": "string"
                    },
                    "dns_lexicon_user": {
                        "type": "string"
                    },
                    "dns_linode_key": {
                        "type": "string"
                    },
                    "dns_lua_email": {
                        "type": "string"
                    },
                    "dns_lua_key": {
                        "type": "string"
                    },
                    "dns_me_key": {
                        "type": "string"
                    },
                    "dns_me_secret": {
                        "type": "string"
                    },
                    "dns_namecom_token": {
                        "type": "string"
                    },
                    "dns_namecom_user": {
                        "type": "string"
                    },
                    "dns_nsone_key": {
                        "type": "string"
                    },
                    "dns_nsupdate_key": {
                        "type": "string"
                    },
                    "dns_nsupdate_server": {
                        "type": "string"
                    },
                    "dns_ovh_app_key": {
                        "type": "string"
                    },
                    "dns_ovh_app_secret": {
                        "type": "string"
                    },
                    "dns_ovh_consumer_key": {
                        "type": "string"
                    },
                    "dns_ovh_endpoint": {
                        "type": "string"
                    },
                    "dns_pdns_serverid": {
                        "type": "string"
                    },
                    "dns_pdns_token": {
                        "type": "string"
                    },
                    "dns_pdns_url": {
                        "type": "string"
                    },
                    "dns_service": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "dns_sleep": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "dns_vscale_key": {
                        "type": "string"
                    },
                    "dns_yandex_token": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "http_haproxyFrontends": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "http_haproxyInject": {
                        "type": "boolean"
                    },
                    "http_opn_autodiscovery": {
                        "type": "boolean"
                    },
                    "http_opn_interface": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "http_opn_ipaddresses": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "http_service": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "id": {
                        "type": "string"
                    },
                    "method": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    }
                },
                "required": [
                    "dns_service",
                    "dns_sleep",
                    "enabled",
                    "http_service",
                    "method",
                    "name"
                ],
                "default": [
                    {
                        "dns_ispconfig_insecure": true
                    },
                    {
                        "dns_sleep": 120
                    },
                    {
                        "enabled": true
                    },
                    {
                        "http_haproxyInject": true
                    },
                    {
                        "http_opn_autodiscovery": true
                    }
                ]
            },
            "OPNsense.captiveportal.templates.template": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "pattern": "/[0-9a-zA-Z\\+\\=\\/]{20,}/u"
                    },
                    "fileid": {
                        "type": "string",
                        "pattern": "/[0-9a-zA-Z\\-]{1,255}/u"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "content",
                    "fileid",
                    "name"
                ]
            },
            "OPNsense.captiveportal.zones.zone": {
                "type": "object",
                "properties": {
                    "allowedAddresses": {
                        "$ref": "#/components/schemas/OptionList",
                        "pattern": "/^([\\/0-9.,])*/u"
                    },
                    "allowedMACAddresses": {
                        "$ref": "#/components/schemas/OptionList",
                        "pattern": "/^((([0-9a-fA-F]{2}:){5}([0-9a-fA-F]{2})([,]){0,1}))*/u"
                    },
                    "authEnforceGroup": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "authservers": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "certificate": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "concurrentlogins": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "hardtimeout": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 10080
                    },
                    "idletimeout": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 10080
                    },
                    "interfaces": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "servername": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z.,_\\-]){0,1024}$/u"
                    },
                    "template": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "transparentHTTPProxy": {
                        "type": "boolean"
                    },
                    "transparentHTTPSProxy": {
                        "type": "boolean"
                    },
                    "zoneid": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 19
                    }
                },
                "required": [
                    "concurrentlogins",
                    "description",
                    "enabled",
                    "hardtimeout",
                    "idletimeout",
                    "interfaces",
                    "transparentHTTPProxy",
                    "transparentHTTPSProxy",
                    "zoneid"
                ],
                "default": [
                    {
                        "concurrentlogins": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "transparentHTTPProxy": true
                    },
                    {
                        "transparentHTTPSProxy": true
                    }
                ]
            },
            "OPNsense.cron.jobs.job": {
                "type": "object",
                "properties": {
                    "command": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "days": {
                        "type": "string",
                        "pattern": "/^(((?:\\*|[1-2][0-9]|0[1-9]|[1-9]|[3][0-1])(,{1}|-{1}|\\/{1}|$))+|L)$/"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "hours": {
                        "type": "string",
                        "pattern": "/^((?:\\*|([1][0-9]|[2][0-3])|0[0-9]|[0-9])(,{1}|-{1}|\\/{1}|$))+$/"
                    },
                    "minutes": {
                        "type": "string",
                        "pattern": "/^((?:\\*|[1-5][0-9]|0[0-9]|[0-9])(,{1}|-{1}|\\/{1}|$))+$/"
                    },
                    "months": {
                        "type": "string",
                        "pattern": "/^(((?:\\*|[1][0-2]|0[1-9]|[1-9]|JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(,{1}|-{1}|\\/{1}|$))+)$/"
                    },
                    "origin": {
                        "type": "string",
                        "pattern": "/^([a-z,A-Z,1-9]){0,30}$/"
                    },
                    "parameters": {
                        "type": "string",
                        "pattern": "/^([^;|`]){1,255}$/"
                    },
                    "weekdays": {
                        "type": "string",
                        "pattern": "/^(((?:\\*|[0-7])(,{1}|-{1}|\\/{1}|$))+)$/"
                    },
                    "who": {
                        "type": "string"
                    }
                },
                "required": [
                    "command",
                    "days",
                    "description",
                    "enabled",
                    "hours",
                    "minutes",
                    "months",
                    "origin",
                    "weekdays",
                    "who"
                ],
                "default": [
                    {
                        "days": "*"
                    },
                    {
                        "enabled": true
                    },
                    {
                        "hours": "0"
                    },
                    {
                        "minutes": "0"
                    },
                    {
                        "months": "*"
                    },
                    {
                        "origin": "cron"
                    },
                    {
                        "weekdays": "*"
                    },
                    {
                        "who": "root"
                    }
                ]
            },
            "OPNsense.freeradius.client.clients.client": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "name",
                    "secret"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.freeradius.user.users.user": {
                "type": "object",
                "properties": {
                    "chillispot_bw_max_down": {
                        "type": "integer"
                    },
                    "chillispot_bw_max_up": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "ip": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "ip6": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-\\!\\$\\%\\/\\(\\)\\+\\#\\=]){1,128}$/u"
                    },
                    "route": {
                        "$ref": "#/components/schemas/OptionList",
                        "pattern": "/^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2},)*(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2})$/"
                    },
                    "sessionlimit_max_session_limit": {
                        "type": "integer"
                    },
                    "subnet": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "username": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,128}$/u"
                    },
                    "vlan": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4096
                    },
                    "wispr_bw_max_down": {
                        "type": "integer"
                    },
                    "wispr_bw_max_up": {
                        "type": "integer"
                    },
                    "wispr_bw_min_down": {
                        "type": "integer"
                    },
                    "wispr_bw_min_up": {
                        "type": "integer"
                    }
                },
                "required": [
                    "enabled",
                    "password",
                    "username"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.ftpproxies.ftpproxy": {
                "type": "object",
                "properties": {
                    "debuglevel": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 7
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "idletimeout": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 86400
                    },
                    "listenaddress": {
                        "type": "string",
                        "pattern": "/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-4]|2[0-5][0-9]|[01]?[0-9][0-9]?)$/"
                    },
                    "listenport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "logconnections": {
                        "type": "boolean"
                    },
                    "maxsessions": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 500
                    },
                    "reverseaddress": {
                        "type": "string",
                        "pattern": "/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-4]|2[0-5][0-9]|[01]?[0-9][0-9]?)$/"
                    },
                    "reverseport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "rewritesourceport": {
                        "type": "boolean"
                    },
                    "sourceaddress": {
                        "type": "string",
                        "pattern": "/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-4]|2[0-5][0-9]|[01]?[0-9][0-9]?)$/"
                    }
                },
                "required": [
                    "enabled",
                    "listenaddress",
                    "listenport"
                ],
                "default": [
                    {
                        "debuglevel": 5
                    },
                    {
                        "enabled": true
                    },
                    {
                        "idletimeout": 86400
                    },
                    {
                        "listenaddress": "127.0.0.1"
                    },
                    {
                        "listenport": 8021
                    },
                    {
                        "logconnections": true
                    },
                    {
                        "maxsessions": 100
                    },
                    {
                        "reverseport": 21
                    },
                    {
                        "rewritesourceport": true
                    }
                ]
            },
            "OPNsense.HAProxy.acls.acl": {
                "type": "object",
                "properties": {
                    "custom_acl": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "expression": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "hdr": {
                        "type": "string",
                        "pattern": "/^.{1,1024}$/u"
                    },
                    "hdr_beg": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "hdr_end": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "hdr_reg": {
                        "type": "string",
                        "pattern": "/^.{1,1024}$/u"
                    },
                    "hdr_sub": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\t^,^;^\\.^\\[^\\]^\\{^\\}]{1,255}$/u"
                    },
                    "nbsrv": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 500000
                    },
                    "nbsrv_backend": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "negate": {
                        "type": "boolean"
                    },
                    "path": {
                        "type": "string",
                        "pattern": "/^.{1,1024}$/u"
                    },
                    "path_beg": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "path_dir": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "path_end": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "path_reg": {
                        "type": "string",
                        "pattern": "/^.{1,1024}$/u"
                    },
                    "path_sub": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "queryBackend": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "src_bytes_in_rate": {
                        "type": "integer"
                    },
                    "src_bytes_in_rate_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_bytes_out_rate": {
                        "type": "integer"
                    },
                    "src_bytes_out_rate_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_conn_cnt": {
                        "type": "integer"
                    },
                    "src_conn_cnt_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_conn_cur": {
                        "type": "integer"
                    },
                    "src_conn_cur_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_conn_rate": {
                        "type": "integer"
                    },
                    "src_conn_rate_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_http_err_cnt": {
                        "type": "integer"
                    },
                    "src_http_err_cnt_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_http_err_rate": {
                        "type": "integer"
                    },
                    "src_http_err_rate_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_http_req_cnt": {
                        "type": "integer"
                    },
                    "src_http_req_cnt_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_http_req_rate": {
                        "type": "integer"
                    },
                    "src_http_req_rate_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_kbytes_in": {
                        "type": "integer"
                    },
                    "src_kbytes_in_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_kbytes_out": {
                        "type": "integer"
                    },
                    "src_kbytes_out_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_port": {
                        "type": "integer"
                    },
                    "src_port_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_sess_cnt": {
                        "type": "integer"
                    },
                    "src_sess_cnt_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "src_sess_rate": {
                        "type": "integer"
                    },
                    "src_sess_rate_comparison": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "ssl_c_ca_commonname": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "ssl_c_verify_code": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 500000
                    },
                    "ssl_sni": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "ssl_sni_beg": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "ssl_sni_end": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "ssl_sni_reg": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "ssl_sni_sub": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "urlparam": {
                        "type": "string"
                    },
                    "url_param": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "url_param_value": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "expression",
                    "name",
                    "negate"
                ],
                "default": [
                    {
                        "negate": true
                    }
                ]
            },
            "OPNsense.HAProxy.actions.action": {
                "type": "object",
                "properties": {
                    "actionFind": {
                        "type": "string"
                    },
                    "actionName": {
                        "type": "string"
                    },
                    "actionValue": {
                        "type": "string"
                    },
                    "custom": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "http_request_add_header_content": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_add_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_auth": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_del_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_lua": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_redirect": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_replace_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_replace_header_regex": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_replace_value_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_replace_value_regex": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_set_header_content": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_set_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_request_use_service": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_add_header_content": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_add_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_del_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_lua": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_replace_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_replace_header_regex": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_replace_value_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_replace_value_regex": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_set_header_content": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_set_header_name": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "http_response_set_status_code": {
                        "type": "integer",
                        "minimum": 100,
                        "maximum": 999
                    },
                    "http_response_set_status_reason": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "linkedAcls": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\t^,^;^\\.^\\[^\\]^\\{^\\}]{1,255}$/u"
                    },
                    "Operator": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "tcp_request_content_lua": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "tcp_request_content_use_service": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "tcp_response_content_lua": {
                        "type": "string",
                        "pattern": "/^.{1,4096}$/u"
                    },
                    "testType": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "type": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "useBackend": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "useServer": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "use_backend": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "use_server": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "name",
                    "testType",
                    "type"
                ]
            },
            "OPNsense.HAProxy.backends.backend": {
                "type": "object",
                "properties": {
                    "algorithm": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "customOptions": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "healthCheck": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "healthCheckEnabled": {
                        "type": "boolean"
                    },
                    "healthCheckLogStatus": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "linkedActions": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "linkedErrorfiles": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "linkedServers": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._]){1,255}$/u"
                    },
                    "proxyProtocol": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "source": {
                        "type": "string",
                        "pattern": "/^((([0-9a-zA-Z._\\-\\*]+:[0-9]+(-[0-9]+)?)([,]){0,1}))*/u"
                    },
                    "stickiness_bytesInRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_bytesOutRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_connRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_cookielength": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "stickiness_cookiename": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){1,1024}$/u"
                    },
                    "stickiness_dataTypes": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "stickiness_expire": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,5}(?:ms|s|m|h|d)?)/u"
                    },
                    "stickiness_httpErrRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_httpReqRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_pattern": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "stickiness_sessRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_size": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,5}[k|m|g]{1})*/u"
                    },
                    "tuning_defaultserver": {
                        "type": "string"
                    },
                    "tuning_noport": {
                        "type": "boolean"
                    },
                    "tuning_retries": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100
                    },
                    "tuning_timeoutCheck": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "tuning_timeoutConnect": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "tuning_timeoutServer": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    }
                },
                "required": [
                    "algorithm",
                    "enabled",
                    "healthCheckEnabled",
                    "mode",
                    "name",
                    "stickiness_expire",
                    "stickiness_size",
                    "tuning_noport"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "healthCheckEnabled": true
                    },
                    {
                        "healthCheckLogStatus": true
                    },
                    {
                        "stickiness_bytesInRatePeriod": "1m"
                    },
                    {
                        "stickiness_bytesOutRatePeriod": "1m"
                    },
                    {
                        "stickiness_connRatePeriod": "10s"
                    },
                    {
                        "stickiness_expire": "30m"
                    },
                    {
                        "stickiness_httpErrRatePeriod": "10s"
                    },
                    {
                        "stickiness_httpReqRatePeriod": "10s"
                    },
                    {
                        "stickiness_sessRatePeriod": "10s"
                    },
                    {
                        "stickiness_size": "50k"
                    },
                    {
                        "tuning_noport": true
                    }
                ]
            },
            "OPNsense.HAProxy.errorfiles.errorfile": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "content": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\t^,^;^\\.^\\[^\\]^\\{^\\}]{1,255}$/u"
                    }
                },
                "required": [
                    "code",
                    "content",
                    "id",
                    "name"
                ]
            },
            "OPNsense.HAProxy.frontends.frontend": {
                "type": "object",
                "properties": {
                    "bind": {
                        "$ref": "#/components/schemas/OptionList",
                        "pattern": "/^((([0-9a-zA-Z._\\-\\*:]+:[0-9]+(-[0-9]+)?)([,]){0,1}))*/u"
                    },
                    "bindOptions": {
                        "type": "string"
                    },
                    "connectionBehaviour": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "customOptions": {
                        "type": "string"
                    },
                    "defaultBackend": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "forwardFor": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "linkedActions": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "linkedErrorfiles": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "logging_detailedLog": {
                        "type": "boolean"
                    },
                    "logging_dontLogNormal": {
                        "type": "boolean"
                    },
                    "logging_dontLogNull": {
                        "type": "boolean"
                    },
                    "logging_logSeparateErrors": {
                        "type": "boolean"
                    },
                    "logging_socketStats": {
                        "type": "boolean"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._]){1,255}$/u"
                    },
                    "ssl_advancedEnabled": {
                        "type": "boolean"
                    },
                    "ssl_bindOptions": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "ssl_certificates": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "ssl_cipherList": {
                        "type": "string"
                    },
                    "ssl_customOptions": {
                        "type": "string"
                    },
                    "ssl_default_certificate": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "ssl_enabled": {
                        "type": "boolean"
                    },
                    "ssl_hstsEnabled": {
                        "type": "boolean"
                    },
                    "ssl_hstsIncludeSubDomains": {
                        "type": "boolean"
                    },
                    "ssl_hstsMaxAge": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1000000000
                    },
                    "ssl_hstsPreload": {
                        "type": "boolean"
                    },
                    "stickiness_bytesInRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_bytesOutRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_connRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_counter": {
                        "type": "boolean"
                    },
                    "stickiness_counter_key": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._]){1,32}$/u"
                    },
                    "stickiness_dataTypes": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "stickiness_expire": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,5}(?:ms|s|m|h|d)?)/u"
                    },
                    "stickiness_httpErrRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_httpReqRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_length": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 16384
                    },
                    "stickiness_pattern": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "stickiness_sessRatePeriod": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "stickiness_size": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,5}[k|m|g]{1})*/u"
                    },
                    "tuning_maxConnections": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 500000
                    },
                    "tuning_timeoutClient": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "tuning_timeoutHttpKeepAlive": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "tuning_timeoutHttpReq": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    }
                },
                "required": [
                    "bind",
                    "connectionBehaviour",
                    "enabled",
                    "forwardFor",
                    "logging_detailedLog",
                    "logging_dontLogNormal",
                    "logging_dontLogNull",
                    "logging_logSeparateErrors",
                    "logging_socketStats",
                    "mode",
                    "name",
                    "ssl_advancedEnabled",
                    "ssl_enabled",
                    "ssl_hstsEnabled",
                    "ssl_hstsMaxAge",
                    "stickiness_expire",
                    "stickiness_size"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "forwardFor": true
                    },
                    {
                        "logging_detailedLog": true
                    },
                    {
                        "logging_dontLogNormal": true
                    },
                    {
                        "logging_dontLogNull": true
                    },
                    {
                        "logging_logSeparateErrors": true
                    },
                    {
                        "logging_socketStats": true
                    },
                    {
                        "ssl_advancedEnabled": true
                    },
                    {
                        "ssl_cipherList": "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
                    },
                    {
                        "ssl_enabled": true
                    },
                    {
                        "ssl_hstsEnabled": true
                    },
                    {
                        "ssl_hstsIncludeSubDomains": true
                    },
                    {
                        "ssl_hstsMaxAge": 15768000
                    },
                    {
                        "ssl_hstsPreload": true
                    },
                    {
                        "stickiness_bytesInRatePeriod": "1m"
                    },
                    {
                        "stickiness_bytesOutRatePeriod": "1m"
                    },
                    {
                        "stickiness_connRatePeriod": "10s"
                    },
                    {
                        "stickiness_counter": true
                    },
                    {
                        "stickiness_counter_key": "src"
                    },
                    {
                        "stickiness_expire": "30m"
                    },
                    {
                        "stickiness_httpErrRatePeriod": "10s"
                    },
                    {
                        "stickiness_httpReqRatePeriod": "10s"
                    },
                    {
                        "stickiness_sessRatePeriod": "10s"
                    },
                    {
                        "stickiness_size": "50k"
                    }
                ]
            },
            "OPNsense.HAProxy.healthchecks.healthcheck": {
                "type": "object",
                "properties": {
                    "agentPort": {
                        "type": "integer"
                    },
                    "agent_port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "checkport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "dbUser": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "esmtp_domain": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,255}$/u"
                    },
                    "http_expression": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "http_expressionEnabled": {
                        "type": "boolean"
                    },
                    "http_host": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,255}$/u"
                    },
                    "http_method": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "http_negate": {
                        "type": "boolean"
                    },
                    "http_uri": {
                        "type": "string",
                        "pattern": "/^(.*){1,255}$/u"
                    },
                    "http_value": {
                        "type": "string"
                    },
                    "http_version": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "interval": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "mysql_post41": {
                        "type": "boolean"
                    },
                    "mysql_user": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,255}$/u"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\t^,^;^\\.^\\[^\\]^\\{^\\}]{1,255}$/u"
                    },
                    "pgsql_user": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,255}$/u"
                    },
                    "smtpDomain": {
                        "type": "string"
                    },
                    "smtp_domain": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,255}$/u"
                    },
                    "tcp_enabled": {
                        "type": "boolean"
                    },
                    "tcp_matchType": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "tcp_matchValue": {
                        "type": "string"
                    },
                    "tcp_negate": {
                        "type": "boolean"
                    },
                    "tcp_sendValue": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "interval",
                    "name",
                    "type"
                ],
                "default": [
                    {
                        "http_expressionEnabled": true
                    },
                    {
                        "http_host": "localhost"
                    },
                    {
                        "http_negate": true
                    },
                    {
                        "http_uri": "/"
                    },
                    {
                        "interval": "2s"
                    },
                    {
                        "mysql_post41": true
                    },
                    {
                        "tcp_enabled": true
                    },
                    {
                        "tcp_negate": true
                    }
                ]
            },
            "OPNsense.HAProxy.luas.lua": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[^\\t^,^;^\\.^\\[^\\]^\\{^\\}]{1,255}$/u"
                    }
                },
                "required": [
                    "content",
                    "enabled",
                    "id",
                    "name"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.HAProxy.servers.server": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){0,1024}$/u"
                    },
                    "advanced": {
                        "type": "string"
                    },
                    "checkDownInterval": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "checkInterval": {
                        "type": "string",
                        "pattern": "/^([0-9]{1,8}(?:us|ms|s|m|h|d)?)/u"
                    },
                    "checkport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._]){1,255}$/u"
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "source": {
                        "type": "string",
                        "pattern": "/^((([0-9a-zA-Z._\\-\\*]+:[0-9]+(-[0-9]+)?)([,]){0,1}))*/u"
                    },
                    "ssl": {
                        "type": "boolean"
                    },
                    "sslCA": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "sslClientCertificate": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "sslCRL": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "sslVerify": {
                        "type": "boolean"
                    },
                    "weight": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 256
                    }
                },
                "required": [
                    "address",
                    "mode",
                    "name",
                    "ssl",
                    "sslVerify"
                ],
                "default": [
                    {
                        "ssl": true
                    },
                    {
                        "sslVerify": true
                    }
                ]
            },
            "OPNsense.IDS.rules.rule": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "sid": {
                        "type": "integer"
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "sid"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.IDS.userDefinedRules.rule": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "fingerprint": {
                        "type": "string",
                        "pattern": "/^([0-9a-fA-F:]){59,59}$/u"
                    },
                    "geoip": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "geoip_direction": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "action",
                    "description",
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.monit.alert": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "events": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "format": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "noton": {
                        "type": "boolean"
                    },
                    "recipient": {
                        "type": "string"
                    },
                    "reminder": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400
                    }
                },
                "required": [
                    "enabled",
                    "noton",
                    "recipient"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "noton": true
                    },
                    {
                        "recipient": "root@localhost.local"
                    },
                    {
                        "reminder": 10
                    }
                ]
            },
            "OPNsense.monit.service": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "pattern": "/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-4]|2[0-5][0-9]|[01]?[0-9][0-9]?)$/"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "Interface": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "match": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\._\\-\\$]){1,255}$/u"
                    },
                    "path": {
                        "type": "string",
                        "pattern": "/^(\\/[^\\/ ]*)+\\/?.*$/"
                    },
                    "pidfile": {
                        "type": "string",
                        "pattern": "/^(\\/[^\\/ ]*)+\\/?$/"
                    },
                    "start": {
                        "type": "string",
                        "pattern": "/^(\\/[^\\/ ]*)+\\/? .*$/"
                    },
                    "stop": {
                        "type": "string",
                        "pattern": "/^(\\/[^\\/ ]*)+\\/? .*$/"
                    },
                    "tests": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "type": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "enabled",
                    "name",
                    "type"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.monit.test": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "condition": {
                        "type": "string",
                        "pattern": "/^.{1,255}$/u"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\._\\- ]){1,255}$/u"
                    },
                    "path": {
                        "type": "string",
                        "pattern": "/^(\\/[^\\/ ]*)+\\/?.*$/"
                    }
                },
                "required": [
                    "action",
                    "condition",
                    "name"
                ]
            },
            "OPNsense.postfix.domain.domains.domain": {
                "type": "object",
                "properties": {
                    "destination": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z.:\\-\\[\\]]){1,64}$/u"
                    },
                    "domainname": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "destination",
                    "domainname",
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.postfix.recipient.recipients.recipient": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "address": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "action",
                    "address",
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.postfix.sender.senders.sender": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "address": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "action",
                    "address",
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.proxy.forward.acl.remoteACLs.blacklists.blacklist": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "filename": {
                        "type": "string",
                        "pattern": "/^[a-zA-Z0-9]{1,245}\\.?[a-zA-z0-9]{1,10}$/"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "password": {
                        "type": "string"
                    },
                    "sslNoVerify": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "enabled",
                    "filename",
                    "sslNoVerify",
                    "url"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "sslNoVerify": true
                    }
                ]
            },
            "OPNsense.ProxyUserACL.general.ACLs.ACL": {
                "type": "object",
                "properties": {
                    "Black": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "Domains": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "Group": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "Hex": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Priority": {
                        "type": "integer"
                    }
                },
                "required": [
                    "Black",
                    "Group",
                    "Hex",
                    "Name",
                    "Priority"
                ]
            },
            "OPNsense.quagga.bgp.aspaths.aspath": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "AS": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 99
                    }
                },
                "required": [
                    "action",
                    "AS",
                    "enabled",
                    "number"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.bgp.neighbors.neighbor": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "defaultoriginate": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "linkedPrefixlistIn": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "linkedPrefixlistOut": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "linkedRoutemapIn": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "linkedRoutemapOut": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "nexthopself": {
                        "type": "boolean"
                    },
                    "remoteas": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4294967295
                    },
                    "updatesource": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "address",
                    "enabled",
                    "remoteas"
                ],
                "default": [
                    {
                        "defaultoriginate": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "nexthopself": true
                    }
                ]
            },
            "OPNsense.quagga.bgp.prefixlists.prefixlist": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "seqnumber": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 99
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "name",
                    "network",
                    "seqnumber"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.bgp.routemaps.routemap": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 99
                    },
                    "match": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "name": {
                        "type": "string"
                    },
                    "set": {
                        "type": "string"
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "id",
                    "name",
                    "set"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.ospf6.interfaces.interface": {
                "type": "object",
                "properties": {
                    "area": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "cost": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "deadinterval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "hellointerval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "interfacename": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "networktype": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "priority": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "retransmitinterval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "transmitdelay": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                },
                "required": [
                    "area",
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.ospf.interfaces.interface": {
                "type": "object",
                "properties": {
                    "authkey": {
                        "type": "string",
                        "pattern": "/^\\S+$/"
                    },
                    "authtype": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "cost": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "deadinterval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "hellointerval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "interfacename": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "networktype": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "priority": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "retransmitinterval": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "transmitdelay": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    }
                },
                "required": [
                    "enabled"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.quagga.ospf.networks.network": {
                "type": "object",
                "properties": {
                    "area": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "ipaddr": {
                        "type": "string",
                        "pattern": "/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/"
                    },
                    "linkedPrefixlistIn": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "linkedPrefixlistOut": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "netmask": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 32
                    }
                },
                "required": [
                    "area",
                    "enabled",
                    "ipaddr",
                    "netmask"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "netmask": 24
                    }
                ]
            },
            "OPNsense.quagga.ospf.prefixlists.prefixlist": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "seqnumber": {
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 99
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "name",
                    "network",
                    "seqnumber"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "relayd.host": {
                "type": "object",
                "properties": {}
            },
            "relayd.protocol": {
                "type": "object",
                "properties": {}
            },
            "relayd.table": {
                "type": "object",
                "properties": {}
            },
            "relayd.tablecheck": {
                "type": "object",
                "properties": {}
            },
            "relayd.virtualserver": {
                "type": "object",
                "properties": {}
            },
            "staticroutes.route": {
                "type": "object",
                "properties": {
                    "descr": {
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "gateway": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "network": {
                        "type": "string"
                    }
                },
                "required": [
                    "disabled",
                    "gateway",
                    "network"
                ],
                "default": [
                    {
                        "disabled": true
                    }
                ]
            },
            "OPNsense.siproxd.domain.domains.domain": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "host": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    }
                },
                "required": [
                    "enabled",
                    "host",
                    "name",
                    "port"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "port": 5060
                    }
                ]
            },
            "OPNsense.siproxd.user.users.user": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-\\!\\$\\%\\/\\(\\)\\+\\#\\=]){1,128}$/u"
                    },
                    "username": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z._\\-]){1,128}$/u"
                    }
                },
                "required": [
                    "enabled",
                    "password",
                    "username"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.Tinc.hosts.host": {
                "type": "object",
                "properties": {
                    "cipher": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "connectTo": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "extaddress": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){0,1024}$/u"
                    },
                    "extport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "hostname": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\_]){1,1024}$/u"
                    },
                    "network": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "pubkey": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    }
                },
                "required": [
                    "cipher",
                    "connectTo",
                    "enabled",
                    "extaddress",
                    "extport",
                    "hostname",
                    "network",
                    "pubkey",
                    "subnet"
                ],
                "default": [
                    {
                        "connectTo": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "extport": 655
                    }
                ]
            },
            "OPNsense.Tinc.networks.network": {
                "type": "object",
                "properties": {
                    "cipher": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "debuglevel": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "extaddress": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\.,_\\-:]){0,1024}$/u"
                    },
                    "extport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "hostname": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z\\_]){1,1024}$/u"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "intaddress": {
                        "type": "string"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^([0-9a-zA-Z]){1,50}$/u"
                    },
                    "pingtimeout": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "PMTUDiscovery": {
                        "type": "boolean"
                    },
                    "privkey": {
                        "type": "string"
                    },
                    "pubkey": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    }
                },
                "required": [
                    "cipher",
                    "debuglevel",
                    "enabled",
                    "extaddress",
                    "extport",
                    "hostname",
                    "id",
                    "intaddress",
                    "mode",
                    "name",
                    "pingtimeout",
                    "PMTUDiscovery",
                    "privkey",
                    "pubkey",
                    "subnet"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "extport": 655
                    },
                    {
                        "pingtimeout": 5
                    },
                    {
                        "PMTUDiscovery": true
                    }
                ]
            },
            "OPNsense.tor.exitpolicy.policy": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "endport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "network": {
                        "type": "string"
                    },
                    "startport": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "type": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "network",
                    "type"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.tor.hiddenservice.service": {
                "type": "object",
                "properties": {
                    "clients": {
                        "$ref": "#/components/schemas/OptionList",
                        "pattern": "/^([a-z0-9_+-]+,)*([a-z0-9_+-]*)$/i"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "pattern": "/^[a-z0-9_-]+$/i"
                    },
                    "type": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "enabled",
                    "name",
                    "type"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.tor.hiddenserviceacl.hiddenserviceacl": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "hiddenservice": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "target_host": {
                        "type": "string"
                    },
                    "target_port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    }
                },
                "required": [
                    "enabled",
                    "hiddenservice",
                    "port",
                    "target_host",
                    "target_port"
                ],
                "default": [
                    {
                        "enabled": true
                    },
                    {
                        "port": 80
                    },
                    {
                        "target_port": 80
                    }
                ]
            },
            "OPNsense.tor.general.client_authentications.client_auth": {
                "type": "object",
                "properties": {
                    "auth_cookie": {
                        "type": "string",
                        "pattern": "/^[a-z0-9\\+\\/]{22}$/i"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "onion_service": {
                        "type": "string",
                        "pattern": "/^[a-z2-7]{16}\\.onion$/i"
                    }
                },
                "required": [
                    "auth_cookie",
                    "enabled",
                    "onion_service"
                ],
                "default": [
                    {
                        "auth_cookie": "0000000000000000000000"
                    },
                    {
                        "enabled": true
                    },
                    {
                        "onion_service": "exampleexample23.onion"
                    }
                ]
            },
            "OPNsense.tor.aclsockspolicy.policy": {
                "type": "object",
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "network": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "action",
                    "enabled",
                    "network",
                    "type"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.TrafficShaper.pipes.pipe": {
                "type": "object",
                "properties": {
                    "bandwidth": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 899795
                    },
                    "bandwidthMetric": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "buckets": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "codel_ecn_enable": {
                        "type": "boolean"
                    },
                    "codel_enable": {
                        "type": "boolean"
                    },
                    "codel_interval": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "codel_target": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "delay": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 3000
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "fqcodel_flows": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "fqcodel_limit": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "fqcodel_quantum": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "mask": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "number": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "origin": {
                        "type": "string",
                        "pattern": "/^([a-z,A-Z,1-9]){0,30}$/"
                    },
                    "queue": {
                        "type": "integer",
                        "minimum": 2,
                        "maximum": 100
                    },
                    "scheduler": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "bandwidth",
                    "bandwidthMetric",
                    "codel_ecn_enable",
                    "codel_enable",
                    "description",
                    "enabled",
                    "mask",
                    "number"
                ],
                "default": [
                    {
                        "codel_ecn_enable": true
                    },
                    {
                        "codel_enable": true
                    },
                    {
                        "enabled": true
                    }
                ]
            },
            "OPNsense.TrafficShaper.queues.queue": {
                "type": "object",
                "properties": {
                    "buckets": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "codel_ecn_enable": {
                        "type": "boolean"
                    },
                    "codel_enable": {
                        "type": "boolean"
                    },
                    "codel_interval": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "codel_target": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "mask": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "number": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "origin": {
                        "type": "string",
                        "pattern": "/^([a-z,A-Z,1-9]){0,30}$/"
                    },
                    "pipe": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "weight": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100
                    }
                },
                "required": [
                    "codel_ecn_enable",
                    "codel_enable",
                    "description",
                    "enabled",
                    "mask",
                    "number",
                    "pipe",
                    "weight"
                ],
                "default": [
                    {
                        "codel_ecn_enable": true
                    },
                    {
                        "codel_enable": true
                    },
                    {
                        "enabled": true
                    },
                    {
                        "weight": 100
                    }
                ]
            },
            "OPNsense.TrafficShaper.rules.rule": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "destination_not": {
                        "type": "boolean"
                    },
                    "direction": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "dst_port": {
                        "type": "integer"
                    },
                    "Interface": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "interface2": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "origin": {
                        "type": "string",
                        "pattern": "/^([a-z,A-Z,1-9]){0,30}$/"
                    },
                    "proto": {
                        "$ref": "#/components/schemas/OptionList"
                    },
                    "sequence": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1000000
                    },
                    "source": {
                        "type": "string"
                    },
                    "source_not": {
                        "type": "boolean"
                    },
                    "src_port": {
                        "type": "integer"
                    },
                    "target": {
                        "$ref": "#/components/schemas/OptionList"
                    }
                },
                "required": [
                    "destination",
                    "destination_not",
                    "dst_port",
                    "Interface",
                    "proto",
                    "sequence",
                    "source",
                    "source_not",
                    "src_port",
                    "target"
                ],
                "default": [
                    {
                        "destination_not": true
                    },
                    {
                        "sequence": 1
                    },
                    {
                        "source_not": true
                    }
                ]
            },
            "OPNsense.zerotier.networks.network": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "networkId": {
                        "type": "string"
                    }
                },
                "required": [
                    "enabled",
                    "networkId"
                ],
                "default": [
                    {
                        "enabled": true
                    }
                ]
            }
        },
        "securitySchemes": {
            "basicauth": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "basicauth": []
        }
    ],
    "tags": [
        {
            "name": "AcmeClient",
            "description": "AcmeClient endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/acmeclient.html"
            }
        },
        {
            "name": "CaptivePortal",
            "description": "CaptivePortal endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/captiveportal.html"
            }
        },
        {
            "name": "Cron",
            "description": "Cron endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/cron.html"
            }
        },
        {
            "name": "FreeRadius",
            "description": "FreeRadius endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/freeradius.html"
            }
        },
        {
            "name": "FtpProxy",
            "description": "FtpProxy endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/ftpproxy.html"
            }
        },
        {
            "name": "HAProxy",
            "description": "HAProxy endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/haproxy.html"
            }
        },
        {
            "name": "IDS",
            "description": "IDS endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/ids.html"
            }
        },
        {
            "name": "Monit",
            "description": "Monit endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/monit.html"
            }
        },
        {
            "name": "Postfix",
            "description": "Postfix endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/postfix.html"
            }
        },
        {
            "name": "Proxy",
            "description": "Proxy endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/proxy.html"
            }
        },
        {
            "name": "ProxyUserACL",
            "description": "ProxyUserACL endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/proxyuseracl.html"
            }
        },
        {
            "name": "Quagga",
            "description": "Quagga endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/quagga.html"
            }
        },
        {
            "name": "Relayd",
            "description": "Relayd endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/relayd.html"
            }
        },
        {
            "name": "Routes",
            "description": "Routes endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/routes.html"
            }
        },
        {
            "name": "Siproxd",
            "description": "Siproxd endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/siproxd.html"
            }
        },
        {
            "name": "Tinc",
            "description": "Tinc endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/tinc.html"
            }
        },
        {
            "name": "Tor",
            "description": "Tor endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/tor.html"
            }
        },
        {
            "name": "TrafficShaper",
            "description": "TrafficShaper endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/trafficshaper.html"
            }
        },
        {
            "name": "ZeroTier",
            "description": "ZeroTier endpoints",
            "externalDocs": {
                "url": "https://docs.opnsense.org/development/api/plugins/zerotier.html"
            }
        }
    ]
}
